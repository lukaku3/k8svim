---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-sample
spec:
  capacity:
    storage: 100Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /pv/sample
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: claim-sample-1
  namespace: default
  labels:
    app: claim-sample-1
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-sample
  namespace: default
  labels:
    app: deploy-sample
spec:
  selector:
    matchLabels:
      app: deploy-sample
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: deploy-sample
    spec:
      # initContainers:
      # Init containers are exactly like regular containers, except:
      # - Init containers always run to completion.
      # - Each init container must complete successfully before the next one starts.
      containers:
        - name: nginx
          image: nginx:latest
          resources:
            # requests:
            #   cpu: 100m
            #   memory: 100Mi
            # limits:
            #   cpu: 100m
            #   memory: 100Mi
          env:
            - name: DB_HOST
              value: foo
              # valueFrom:
              #   configMapKeyRef:
              #     name: MYAPP
              #     key: DB_HOST
          # ports:
          #   - containerPort: 80
          #     name: MYAPP
          volumeMounts:
            - name: claim-sample-1
              mountPath: /var/lib/mysql
      volumes:
        - name: claim-sample-1
          persistentVolumeClaim:
            claimName: claim-sample-1
      restartPolicy: Always
